# Copyright (C) 2016 Daniel C. Dillon
#
# r-stripper is free software: you can redistribute it and/or modify it
# under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 2 of the License, or
# (at your option) any later version.
#
# r-stripper is distributed in the hope that it will be useful, but
# WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with r-stripper.  If not, see <http://www.gnu.org/licenses/>.

check_supported_linker()
{
    if [ "$1" != "" ]; then
        OUTPUT=`$1 --version`
        case "$OUTPUT" in
            GNU?ld*) return 0 ;;
            GNU?gold*) return 0 ;;
        esac
    fi
}

check_supported_linker_command()
{
    if [ "$1" != "" ]; then
        # First see if it's a linker in its own right
        check_supported_linker $1
        RETURN_CODE=$?

        if [ $RETURN_CODE -ne 0 ]; then
            OUTPUT=`$1 --version`

            OUTPUT=`$SHLIB_LD --version`
            LD_PROG=""
        
            case "$OUTPUT" in
                *gcc*) LD_PROG=`$SHLIB_LD --print-prog-name=ld` ;;
                *g++*) LD_PROG=`$SHLIB_LD --print-prog-name=ld` ;;
                *clang*) LD_PROG=`$SHLIB_LD --print-prog-name=ld` ;;
            esac

            if [ "$LD_PROG" != "" ]; then
                check_supported_linker $LD_PROG
                RETURN_CODE=$?
                return $RETURN_CODE
            fi
        else
            return 0
        fi
    fi

    return 1
}

# Takes the R config variable that describes this linker as the only
# argument (e.g. SHLIB_LD).  Returns 0 on success, 1 otherwise.
check_linker()
{
    if [ -z $R_HOME ]; then
        R_HOME=`R RHOME`
    fi

    if [ "$R_HOME" == "" ]; then
        echo "Could not find R_HOME."
        exit 1
    fi

    LINK_COMMAND=`$R_HOME/bin/R CMD config $1`

    if [ "$LINK_COMMAND" != "" ]; then
        check_supported_linker_command $LINK_COMMAND
        RETURN_CODE=$?
        return $?
    fi

    return 1
}

# Clean up any temporary files we created previously

rm -f src/Makevars.R_STRIP_LINKER_OPTION

# If both SHLIB_LD and SHLIB_CXXLD are gcc compatible, then we can use the
# -Wl,-S option to strip debugging symbols out of the shared library we create.
# If not, then we'll need set R_STRIP_LINKER_OPTION to an empty string.
if [ test `check_linker "SHLIB_LD"` ] && [ test `check_linker "SHLIB_CXXLD"` ]; then
    echo "GNU compatible linkers found."
    
    # If there is a pre-existing Makevars file, go through it and remove the
    # line where we assign to R_STRIP_LINKER_OPTION.  Also, if there is already
    # a line that assigns to PKG_LIBS, make sure it adds
    # $(R_STRIP_LINKER_OPTION) to the end.  Store the results in
    # src/Makevars.R_STRIP_LINKER_OPTION
    
    FOUND_PKG_LIBS_ASSIGNMENT=0
    
    if [ -f src/Makevars ]; then
        while read -r LINE || [ -n "$LINE" ]; do
            case "$LINE" in
                *PKG_LIBS*=*)
                    case "$LINE" in
                        *R_STRIP_LINKER_OPTION*)
                            echo $LINE >> src/Makevars.R_STRIP_LINKER_OPTION ;;
                        *)
                            echo "$LINE \$(R_STRIP_LINKER_OPTION)" \
                                >> src/Makevars.R_STRIP_LINKER_OPTION ;;
                    esac
                    FOUND_PKG_LIBS_ASSIGNMENT=1
                    ;;
                *R_STRIP_LINKER_OPTION*) ;;
                *) echo $LINE >> src/Makevars.R_STRIP_LINKER_OPTION ;;
            esac
        done <src/Makevars
    fi
    
    # Place the proper value in R_STRIP_LINKER_OPTION
    
    echo "R_STRIP_LINKER_OPTION=\"-Wl,-S\"" \
        >> src/Makevars.R_STRIP_LINKER_OPTION
    
    # If there wasn't an assignment to PKG_LIBS already in place, then we need
    # to add one to get our R_STRIP_LINKER_OPTION in there.
    
    if [ $FOUND_PKG_LIBS_ASSIGNMENT -eq 0 ]; then
        echo "PKG_LIBS = \$(R_STRIP_LINKER_OPTION)" \
            >> src/Makevars.R_STRIP_LINKER_OPTION
    fi
fi

# If we created a src/Makevars.R_STRIP_LINKER_OPTION file, then backup the
# current Makevars file and rename our modified version to Makevars.

if [ -f src/Makevars.R_STRIP_LINKER_OPTION ]; then
    if [ -f src/Makevars ]; then
        mv src/Makevars src/Makevars.R_STRIP_LINKER_OPTION.bak
    fi
    
    mv src/Makevars.R_STRIP_LINKER_OPTION src/Makevars
fi
